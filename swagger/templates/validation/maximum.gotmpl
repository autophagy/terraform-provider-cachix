max := {{.Maximum }}

{{- if or (hasPrefix .UnderlyingType "int") }}
  {{- if and (hasPrefix .UnderlyingType "int64") (not .IsAliased) }}
if err := validate.MaximumInt({{ if .Path }}{{ .Path }}{{ else }}""{{ end }}, {{ printf "%q" .Location }}, {{ if .IsNullable }}*{{ end }}{{.ValueExpression }}, int64(max), {{.ExclusiveMaximum }}); err != nil {
  {{- else }}
if err := validate.MaximumInt({{ if .Path }}{{ .Path }}{{ else }}""{{ end }}, {{ printf "%q" .Location }}, int64({{ if .IsNullable }}*{{ end }}{{.ValueExpression }}), int64(max), {{.ExclusiveMaximum }}); err != nil {
  {{- end }}
{{- else }}
  {{- if hasPrefix .UnderlyingType "uint" }}
    {{- if and (hasPrefix .UnderlyingType "uint64") (not .IsAliased) }}
if err := validate.MaximumUint({{ if .Path }}{{ .Path }}{{ else }}""{{ end }}, {{ printf "%q" .Location }}, {{ if .IsNullable }}*{{ end }}{{.ValueExpression }}, uint64(max), {{.ExclusiveMaximum }}); err != nil {
    {{- else }}
if err := validate.MaximumUint({{ if .Path }}{{ .Path }}{{ else }}""{{ end }}, {{ printf "%q" .Location }}, uint64({{ if .IsNullable }}*{{ end }}{{.ValueExpression }}), uint64(max), {{.ExclusiveMaximum }}); err != nil {
    {{- end }}
  {{- else }}
    {{- if and (eq .UnderlyingType "float64") (not .IsAliased) }}
if err := validate.Maximum({{ if .Path }}{{ .Path }}{{ else }}""{{ end }}, {{ printf "%q" .Location }}, {{ if .IsNullable }}*{{ end }}{{.ValueExpression }}, float64(max), {{.ExclusiveMaximum }}); err != nil {
    {{- else }}
if err := validate.Maximum({{ if .Path }}{{ .Path }}{{ else }}""{{ end }}, {{ printf "%q" .Location }}, float64({{ if .IsNullable }}*{{ end }}{{.ValueExpression }}), float64(max), {{.ExclusiveMaximum }}); err != nil {
    {{- end }}
  {{- end }}
{{- end }}
  return err
}

